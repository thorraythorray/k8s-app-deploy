# cd /root/ssl && kubectl create secret tls tls-secret --key server-key.pem --cert server-cert.pem

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-cm
data:
  nginx.conf: |
        server {
            listen       443 ssl;
            client_max_body_size 100m;
            ssl_certificate      /etc/tls/tls.crt;  # kubectl create secret tls会改变源文件名字
            ssl_certificate_key  /etc/tls/tls.key;  # kubectl create secret tls会改变源文件名字
            proxy_ignore_client_abort on;

            location / {
              proxy_read_timeout 300;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Scheme $scheme;
              proxy_redirect off;
              proxy_pass http://192.168.1.99:80;
            }

            # root /opt/ui;
            # location ^~ /v1 {
            #     proxy_read_timeout 300;
            #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #     proxy_set_header Host $host;
            #     proxy_set_header X-Real-IP $remote_addr;
            #     proxy_set_header X-Scheme $scheme;
            #     proxy_redirect off;
            #     proxy_pass http://192.168.1.99:5005;
            #   }

            # location /socket.io {
            #     proxy_http_version 1.1;
            #     proxy_buffering off;
            #     proxy_read_timeout 300s;
            #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #     proxy_set_header Host $host;
            #     proxy_set_header X-Real-IP $remote_addr;
            #     proxy_set_header X-Scheme $scheme;
            #     proxy_set_header Upgrade $http_upgrade;
            #     proxy_set_header Connection "Upgrade";
            #     proxy_pass http://192.168.1.99:9527/socket.io;
            # }
        }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
  - name: https
    port: 443
    targetPort: 443
    nodePort: 443
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.18.0
        ports:
        - name: https
          containerPort: 443
        # command: ["ls", "-a", "/etc/tls"]
        volumeMounts:
        - name: nginx-config-vol
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
          readOnly: false
        - name: tls-certs-vol
          mountPath: /etc/tls
          readOnly: false
      restartPolicy: Always
      volumes:
      - name: tls-certs-vol
        secret:
          secretName: tls-secret
      - name: nginx-config-vol
        configMap:
          name: nginx-cm
